/*************************************************** 
  This is an example for our Adafruit 16-channel PWM & Servo driver
  Servo test - this will drive 8 servos, one after the other on the
  first 8 pins of the PCA9685
  Pick one up today in the adafruit shop!
  ------> http://www.adafruit.com/products/815
  
  These drivers use I2C to communicate, 2 pins are required to  
  interface.
  Adafruit invests time and resources providing this open source code, 
  please support Adafruit and open-source hardware by purchasing 
  products from Adafruit!
  Written by Limor Fried/Ladyada for Adafruit Industries.  
  BSD license, all text above must be included in any redistribution
 ****************************************************/
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>
// called this way, it uses the default address 0x40
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
// you can also call it with a different address you want
//Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(0x41);
// you can also call it with a different address and I2C interface
//Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(&Wire, 0x40);
// Depending on your servo make, the pulse width min and max may vary, you 
// want these to be as small/large as possible without hitting the hard stop
// for max range. You'll have to tweak them as necessary to match the servos you
// have!
#define SERVOMIN  150 // this is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX  600 // this is the 'maximum' pulse length count (out of 4096)
// our servo # counter
uint8_t servoRight=0;
uint8_t servoLeft=1;
//uint8_t servo1=1;
char receivedChar;
boolean newData = false;
void setup() {
  Serial.begin(9600);
  Serial.println("Coding commands: \n(s)Start\n(f) Move forward\n(l) Turn left\n(r)Turn right\n(p)Stop\nPlease input s, f, l, r, or p to control the robot");
  pwm.begin();
  pwm.setPWMFreq(50);  // Analog servos run at ~60 Hz updates
  delay(10);
}
void recvOneChar() {
 if (Serial.available() > 0) {
 receivedChar = Serial.read();
 newData = true;
 }
}
void start()
{
  pwm.setPWM(servoRight, 0,303);
  pwm.setPWM(servoLeft, 0, 280);
}
void moveForward()
{
  pwm.setPWM(servoRight, 0, 305);
  pwm.setPWM(servoLeft, 0, 279);
}
void moveLeft()
{
  pwm.setPWM(servoRight, 0, 310);
  pwm.setPWM(servoLeft, 0, 286);
}
void moveRight()
{
  pwm.setPWM(servoRight, 0, 300);
  pwm.setPWM(servoLeft, 0, 278);
}
void stopMove()
{
  pwm.setPWM(servoRight, 0,295);
  pwm.setPWM(servoLeft, 0, 295);
}
void showNewData() {
 if (newData == true) {
    
  if (receivedChar=='s'){
    Serial.println("\nYour command: Start");
    start();
    delay(1000);
    }
  if (receivedChar=='f'){
    Serial.println("\nYour command: Move forward");
    moveForward();
    delay(5000);
    }
  if (receivedChar=='l'){
    Serial.println("\nYour command: Turn left");
    moveLeft();
    delay(5000);
    }
  
  if (receivedChar=='r'){
    Serial.println("\nYour command: Turn Right");
    moveRight();
    delay(5000);
    }
  if (receivedChar=='p'){
    Serial.println("\nYour command: Stop");
    stopMove();
    }
 newData = false;
 }
 else stopMove();
 
}
void loop() {
  recvOneChar();
  showNewData();
}
